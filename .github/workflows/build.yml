name: BuildAndRunTests

on:
  push:
    branches: 
    - "main"
    - "develop"
  pull_request:
    branches: 
    - "main"
    - "develop"
env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Debug

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: windows-2022

    steps:
    - uses: actions/checkout@v3
    
    
    - run: git submodule update --init

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -G "Visual Studio 17 2022" -A x64 -B ${{github.workspace}}/build -D EDITOR=OFF -D ENABLE_TEST=TRUE

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Test
#      working-directory: ${{github.workspace}}/build/Src/Runtime/Test/${{env.BUILD_TYPE}}
      # Execute tests defined by the CMake configuration.  
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      #run: ctest -C ${{env.BUILD_TYPE}}
      run: |
        cd build/Src/Runtime/Test/${{env.BUILD_TYPE}}
        NativeRuntime_Test.exe
      shell: cmd
      
      
#    - name: Upload Artifacts
#      uses: actions/upload-artifact@v3
#      if: always()
#      with:
#        name: BuildArtifact
#        path: ./
        

    # Post Discord Notify(by Actions Status Discord)
    - name: Actions Status Discord
      # uses: sarisia/actions-status-discord@f268209d088ace9f9666322b04d60e013fef212d
      uses: sarisia/actions-status-discord@v1.10.0
      if: always()
      env: 
        DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK_URL }}
      with:
        status: ${{ job.status }}
